name: Test Suite

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install backend dependencies
      if: matrix.component == 'backend'
      run: |
        cd backend
        npm ci
        
    - name: Install frontend dependencies
      if: matrix.component == 'frontend'
      run: |
        cd frontend/auralis-transcriptor-frontend
        npm ci
        
    - name: Run backend tests
      if: matrix.component == 'backend'
      run: |
        cd backend
        npm test
        
    - name: Run frontend tests
      if: matrix.component == 'frontend'
      run: |
        cd frontend/auralis-transcriptor-frontend
        npm test
        
    - name: Generate coverage report
      run: |
        if [ "${{ matrix.component }}" = "backend" ]; then
          cd backend
          npm run test:coverage || npm test -- --coverage
        else
          cd frontend/auralis-transcriptor-frontend
          npm run test:coverage
        fi
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./${{ matrix.component == 'backend' && 'backend' || 'frontend/auralis-transcriptor-frontend' }}/coverage/lcov.info
        flags: ${{ matrix.component }}
        name: ${{ matrix.component }}-coverage

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [unit-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        npm run install-all
        
    - name: Start backend server
      run: |
        cd backend
        npm start &
        sleep 10
        
    - name: Start frontend server
      run: |
        cd frontend/auralis-transcriptor-frontend
        npm run dev &
        sleep 10
        
    - name: Wait for servers to be ready
      run: |
        npx wait-on http://localhost:5000/api/health
        npx wait-on http://localhost:3000
        
    - name: Run E2E tests
      run: |
        # Add E2E test commands here when implemented
        echo "E2E tests would run here"
        
    - name: Stop servers
      if: always()
      run: |
        pkill -f "node.*server.js" || true
        pkill -f "vite" || true

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        npm run install-all
        
    - name: Build frontend
      run: |
        cd frontend/auralis-transcriptor-frontend
        npm run build
        
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli
        # Add Lighthouse CI configuration when ready
        echo "Lighthouse CI would run here"

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd frontend/auralis-transcriptor-frontend
        npm ci
        
    - name: Run accessibility tests
      run: |
        cd frontend/auralis-transcriptor-frontend
        # Add accessibility testing commands here
        echo "Accessibility tests would run here"

