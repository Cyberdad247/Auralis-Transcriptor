name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend (Node)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: auralis-transcriptor/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: auralis-transcriptor/backend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: npm test --if-present -- --ci

  frontend:
    name: Frontend (Node)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: auralis-transcriptor/frontend/auralis-transcriptor-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: auralis-transcriptor/frontend/auralis-transcriptor-frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Lint (if configured)
        run: npm run lint --if-present

      - name: Build
        run: npm run build --if-present

      - name: Test (if configured)
        run: npm test --if-present -- --ci

  python_services:
    name: Python Services
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: auralis-transcriptor/python-services
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/python-services/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies (minimal if available)
        run: |
          if [ -f requirements-minimal.txt ]; then pip install -r requirements-minimal.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Sanity check (compile)
        run: python -m compileall .

