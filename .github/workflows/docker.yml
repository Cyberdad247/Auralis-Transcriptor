name: Docker Build and Push

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      registry:
        description: "Target registry: ghcr or dockerhub"
        required: false
        default: "ghcr"
      image_suffix:
        description: "Optional image suffix (e.g., -staging)"
        required: false
        default: ""

env:
  # Default to GitHub Container Registry; override via workflow_dispatch input or repository secrets.
  REGISTRY: ${{ github.event.inputs.registry || secrets.DOCKER_REGISTRY || 'ghcr' }}
  BACKEND_CONTEXT: auralis-transcriptor/backend
  FRONTEND_CONTEXT: auralis-transcriptor/frontend/auralis-transcriptor-frontend

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # needed for GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Resolve registry and image names
        id: meta
        run: |
          REGISTRY_INPUT="${{ env.REGISTRY }}"
          if [ "$REGISTRY_INPUT" = "ghcr" ]; then
            echo "registry=ghcr.io" >> $GITHUB_OUTPUT
            echo "backend_image=ghcr.io/${{ github.repository_owner }}/auralis-backend${{ github.event.inputs.image_suffix }}" >> $GITHUB_OUTPUT
            echo "frontend_image=ghcr.io/${{ github.repository_owner }}/auralis-frontend${{ github.event.inputs.image_suffix }}" >> $GITHUB_OUTPUT
          else
            if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
              echo "::error::DOCKERHUB_USERNAME secret is required for dockerhub registry"; exit 1;
            fi
            echo "registry=docker.io" >> $GITHUB_OUTPUT
            echo "backend_image=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/auralis-backend${{ github.event.inputs.image_suffix }}" >> $GITHUB_OUTPUT
            echo "frontend_image=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/auralis-frontend${{ github.event.inputs.image_suffix }}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GitHub Container Registry
        if: steps.meta.outputs.registry == 'ghcr.io'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: steps.meta.outputs.registry == 'docker.io'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract backend metadata (tags, labels)
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.meta.outputs.backend_image }}
          flavor: |
            latest=true # add latest tag on default branch
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}

      - name: Extract frontend metadata (tags, labels)
        id: meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.meta.outputs.frontend_image }}
          flavor: |
            latest=true # add latest tag on default branch
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.BACKEND_CONTEXT }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.FRONTEND_CONTEXT }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

